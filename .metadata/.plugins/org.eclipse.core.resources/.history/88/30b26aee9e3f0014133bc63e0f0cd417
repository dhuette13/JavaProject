package archeologyp1.adt;

import java.util.InputMismatchException;
import java.util.Scanner;

import archeologyp1.shared.Coordinate;
import archeologyp1.shared.Map;
import archeologyp1.shared.Utilities;

public class EntryPoint {
	Scanner input;
	int selection;
	boolean flag;
	int row;
	char column;
	String path;
	Map map;
	ToolBag toolBag;

	public EntryPoint(){
		input = new Scanner(System.in);
		toolBag = new ToolBag();
	}

	public void go(){
		handleLoad();
		Utilities.printMap(map, System.out);

		flag = true;
		/*
		 * 1) Survey
		 * 	a) Light Specturm
		 * 	b) Magnetometer
		 *  c) Metal Detector
		 * 2) Dig
		 * 3) Date Average
		 * 4) Change a Viewing Option
		 * 5) Print
		 * 6) Export
		 */
		while(flag){
			System.out.println("Please pick what you would like to do.");
			System.out.println("1 ) Survey an Area");
			System.out.println("2 ) Dig an Area");
			System.out.println("3 ) Find Average of Found Dates");
			System.out.println("4 ) Change a Viewing Option");
			System.out.println("5 ) Print the map");
			System.out.println("6 ) Export the map");
			System.out.println("0 ) Exit");
			System.out.println("::> ");
			selection = input.nextInt();
			
			switch(selection){
			/* Survey an Area */
			case 1:
				System.out.println("Please specify a row and column: ");
				toolBag.magnetoMeter();
				break;
			/* Dig an Area */
			case 2:
				break;
			/* Find Average of Found Dates */
			case 3:
				break;
			/* Change Viewing Option */
			case 4:
				break;
			/* Print map */
			case 5:
				break;
			/* Export map */
			case 6:
				break;
			/* Exit */
			case 0:
				System.out.println("Thank you. Goodbye");
				flag = false;
				break;
			default:
				System.out.println("Selection not valid. Try again");
			}

		}
	}
	/**
	 * @param args
	 */

	public static void main(String[] args) {
		EntryPoint entry = new EntryPoint();
		entry.go();
	}

	private void handleLoad(){
		flag = true;
		while(flag){
			try{
				System.out.print("Enter path name of file to load: ");
				path = input.next();
				map = Utilities.load(path);
				if(map != null)
					flag = false;
			} catch (InputMismatchException e){
				System.out.println("Incorrect input, try again.");
				input.nextLine();
			}
		}
	}

}
